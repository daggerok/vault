buildscript {
  ext {
    springBootVersion = "1.5.22.RELEASE"
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
  }
}

plugins {
  id "io.franzbecker.gradle-lombok" version "3.3.0"
  id "com.github.ben-manes.versions" version "0.28.0"
  id "org.springframework.boot" version "1.5.22.RELEASE" apply false
  id "io.spring.dependency-management" version "1.0.9.RELEASE" apply false
}

allprojects { p ->

  p.apply plugin: "java"
  p.jar { version = "0.0.1" }
  p.targetCompatibility = p.sourceCompatibility = JavaVersion.VERSION_1_8
  p.repositories { jcenter() }

  p.apply plugin: "io.franzbecker.gradle-lombok"
  p.apply plugin: "org.springframework.boot"
  p.apply plugin: "io.spring.dependency-management"

  p.dependencies {
    compileOnly("org.projectlombok:lombok")
    testCompileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    runtime("org.springframework.boot:spring-boot-devtools")
    testCompile("org.springframework.boot:spring-boot-starter-test")
  }

  p.bootRun { systemProperties = System.properties }
  p.springBoot { executable = true }

  if (p.name == "fallback") return
  [p.test, p.build, p.bootRun].each { t ->
    t.shouldRunAfter p.clean, p.assemble, ":docker:composeUp"
    t.dependsOn ":docker:composeUp"
    t.finalizedBy ":docker:composeDown"
  }
}

dependencies {
  compile project(":fallback")
}
