buildscript {
  ext {
    DEFAULT_TASKS_GROUP = "application tasks"
  }
  repositories {
    mavenCentral()
  }
}

plugins {
  id "idea"
  id "eclipse"
  // ./gradlew build taskTree
  id "com.dorongold.task-tree" version "1.5"
  id "io.franzbecker.gradle-lombok" version "3.3.0"
  // ./gradlew dependencyUpdates -Drevision=release
  id "com.github.ben-manes.versions" version "0.28.0"
}

["clean", "docker:composeUp", "docker:composeDown", "build"].each { buildTaskName ->
  gradle
      .includedBuilds
      .each {
        def projectTask = it.task(":$buildTaskName")
        def resolvedTask = projectTask.resolveTask()
        tasks.create(name: "${it.name}-${resolvedTask.name}", group: DEFAULT_TASKS_GROUP) {
          dependsOn(resolvedTask)
          shouldRunAfter(resolvedTask)
        }
      }
}

Task generalize(String taskName) {
  Set<Task> target = tasks.findAll({ it.name.endsWith(taskName) && it.name != taskName })
  return tasks.create(name: taskName, group: DEFAULT_TASKS_GROUP) {
    dependsOn target
  }
}

["clean", "composeUp", "composeDown"].each { generalize it }

task wrapper(type: Wrapper) {
  gradleVersion = "4.10.3"
}
