buildscript {
  ext {
    DEFAULT_TASKS_GROUP = "application tasks"
  }
}

plugins {
  id "idea"
  id "eclipse"
  // gradle build taskTree
  id "com.dorongold.task-tree" version "1.3"
  // gradle dependencyUpdates -Drevision=release
  id "com.github.ben-manes.versions" version "0.15.0"
}

["clean", "docker:composeDown", "build"].each { buildTaskName ->

  gradle
      .includedBuilds
      .collect({ IncludedBuild ib -> ib?.task(":$buildTaskName") })
      .each { build ->

    tasks.create(name: build.name.substring(1), group: DEFAULT_TASKS_GROUP) {
      dependsOn build
      shouldRunAfter build
    }
  }
}

def generalize(final String taskName) {
  return tasks.create(taskName) {
    group DEFAULT_TASKS_GROUP
    dependsOn tasks.findAll { it.name.endsWith(taskName) && it.name != taskName }
  }
}

generalize("clean")
generalize("composeDown")

task wrapper(type: Wrapper) {
  gradleVersion = "4.1"
}
